#!/bin/bash
#title                    :editjob
#description              :This script is for editing jobs via friendlier interface 
#author		          :Gabriel Saliev (40441590)
#date                     :2020.11.05
#version                  :Pre-alpha
#Made for		  :CSN08116 2020, coursework
#contributors(1)          :Markus Meresma (40439107)
#contributors(2)          :Dávid Gábor Uzonyi(40429825) 


#1.Select job to edit
#2.Save job parameters to a variable
#3.Ask user which parameters he wants to edit
#Create new string with the edited parameters
#remove the non modified cronjob
#Then insert the newly created job 

file=$(crontab -l)

#display jobs without commented lines

if [ $(crontab -l | grep -cv "^#") -eq 0 ]
then
	echo "No jobs available for $USER"
	source `pwd`"/exit"
else
        crontab -l | grep -v "^#"
fi

#loop until user enters correct cronjob or exits
while true; do
	echo "Select one of the jobs displayed  (write it out e.g. 1 * 3 1 1 /home/downloads/check-db)['exit' to return to main menu or 'end' to terminate the program]: "
        read select_job_input

	case $select_job_input in
		"")
			echo "No input detected"
			continue
			;;
		"exit")
			#clear the terminal and return to main menu
			clear
			source `pwd`"/mycrontab"
			;;
		"end")
			#terminate the program
			exit 0
			;;
		*)
			#search for the inserted job
			var=$(crontab -l | grep -c "$select_job_input")

			if [ $var -gt 0 ]
			then
				#break while loop if found
				break
			else
				continue
			fi
	esac
done

#tokenize job
job_tokens=( $select_job_input )
echo "${job_tokens[@]}"

while true;
do
	echo "
Which parameters would you like to edit?
1. Minutes
2. Hour
3. Day of month
4. Month of year
5. Day of week
0. Done    

Enter choice [1 | 2 | 3 | 4 | 5 | 0]: "


       
        read numchoice

        case $numchoice in
            "1" ) 
		    while true;
		    do
			    echo "Enter the minutes (0-59) (write 'unspecified' if you don't want to specify minute):"
			    read min
			    
			    #regex for number validation
			    if [[ $min =~ ^[0-9][0-9] ]] || [[ $min =~ ^[0-9] ]];
			    then
				    if [[ $min -ge 0 ]] && [[ $min -lt 60 ]]
				    then
					    minutes="$min"
					    break
				    fi
			    elif [[ "$min" == "unspecified" ]]; #if the user doesnt want to specify add *
			    then
				    minutes="*"
				    break
			    else
				    echo "You must enter a number between 0 an 59."
			    fi
		    done

		    #replace minutes
		    job_tokens[0]="$minutes"
		    echo "Minutes edited successfully."
		    continue
		    ;;
            "2" )
		    while true;    
		    do
			    echo "Enter the hour (0-23) (write 'unspecified' if you don't want to specify hour):"
			    read hr

        
			    if [[ $hr =~ ^[0-9][0-9] ]] || [[ $hr =~ ^[0-9] ]];        
			    then
            
				    if [[ $hr -ge 0 ]] && [[ $hr -le 23 ]]
				    then
                
					    hour="$hr"
					    break
				    fi
        
			    elif [[ "$hr" == "unspecified" ]];
			    then
            
				    hour="*"
				    break
			    else
				    echo "You must enter a number between 0 and 23."
			    fi
		    done

    
		    job_tokens[1]="$hour"
		    echo "Hour edited successfully."
		    continue
		    ;;
            "3" ) 
		    while true;
		    do
			    echo "Enter the day of month (1-31) (write 'unspecified' if you don't want to specify day of month):"       
			    read dom
			    
			    if [[ $dom =~ ^[0-9][0-9] ]] || [[ $dom =~ ^[0-9] ]];
			    then
            
				    if [[ $dom -ge 1 ]] && [[ $dom -le 31 ]]
				    then
                
					    day_of_month="$dom"  
					    break
				    fi
			    elif [[ "$dom" == "unspecified" ]];
			    then
				    day_of_month="*"
				    break
			    else
				    echo "You must enter a number between 1 and 31."
			    fi
		    done

    
		    job_tokens[2]="$day_of_month"
		    echo "Day of month edited successfully."
		    continue
		    ;;
            "4" ) 
		    while true;
		    do
        
			    echo "Enter month of year (1-12) (write 'unspecified' if you don't want to specify month of year):"
			    read moy

			    if [[ $moy =~ ^[0-9][0-9] ]] || [[ $moy =~ ^[0-9] ]];
		    	    then
            
				    if [[ $moy -ge 1 ]] && [[ $moy -le 12 ]]
				    then
                
					    month_of_year="$moy"
					    break
				    fi
			    elif [[ "$moy" == "unspecified" ]];
			    then
				    month_of_year="*"
				    break
			    else
				    echo "You must enter a number between 1 and 12."
			    fi
		    done

    
		    job_tokens[3]="$month_of_year"
		    echo "Month of year edited successfully."
		    continue
		    ;;
            "5" )
		    while true;
		    do
			    echo "Enter day of week (1-7) (write 'unspecified' if you don't want to specify day of week):"
			    read dow

			    if [[ $dow =~ ^[0-9][0-9] ]] || [[ $dow =~ ^[0-9] ]];
		    	    then
            
				    if [[ $dow -ge 1 ]] && [[ $dow -le 31 ]]
				    then
					    day_of_week="$dow"
					    break
				    fi
			    elif [[ "$dow" == "unspecified" ]];
			    then
				    day_of_week="*"
				    break
			    else
				    echo "You must enter a number between 1 and 7."
			    fi
		    done

    
		    job_tokens[4]="$day_of_week"
		    echo "Day of week edited successfully."
		    continue
		    ;;
            "0" ) 
		    break
		    ;;
            * ) 
		    echo -n "You entered an incorrect option. Please try again." ;;
        esac
done
    
echo "${job_tokens[@]}"

#remove the job    
crontab -u $USER -l | grep -v "$select_job_input" | crontab -u $USER -

#add edited job
(crontab -l ; echo "${job_tokens[@]}")| crontab -

source `pwd`"/exit"    
